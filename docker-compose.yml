version: '3.8'

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: odoo18
    user: odoo
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8070:8069"
    volumes:
      - ./config:/etc/odoo:ro
      - ./addons:/mnt/extra-addons
      - odoo-data:/var/lib/odoo
      - ./logs:/var/log/odoo
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo_password
      - KAFKA_BOOTSTRAP_SERVERS=kafka-broker:29092
      - KAFKA_ENABLED=true
      - ODOO_RC=/etc/odoo/odoo.conf
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8069/web/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    restart: unless-stopped
    
    # ‚≠ê Commande sans db-filter restrictif
    command: ["odoo", "--dev=reload,qweb,werkzeug,xml"]
    
    networks:
      - default
      - kafka-integration

  db:
    image: postgres:15
    container_name: odoo18-db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo_password
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgresql:/var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - default

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: odoo18-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - default

volumes:
  postgresql:
    name: odoo18_postgresql_data
  odoo-data:
    name: odoo18_data

networks:
  default:
    driver: bridge
    name: odoo18_internal_network
  
  kafka-integration:
    external: true
    name: kafka-integration-network